'use strict';

exports.__esModule = true;
exports.WebhooksApi = undefined;

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Webhook properties
 * @typedef WebhookProps
 */

/**
 * @class WebhooksApi
 * @extends BaseApi
 */

var WebhooksApi = exports.WebhooksApi = function (_BaseApi) {
    (0, _inherits3.default)(WebhooksApi, _BaseApi);

    function WebhooksApi() {
        (0, _classCallCheck3.default)(this, WebhooksApi);

        var _this = (0, _possibleConstructorReturn3.default)(this, _BaseApi.apply(this, arguments));

        _this.allowedAuth = ['jwt'];
        return _this;
    }

    /**
     * Validates the properties sent to the API
     * @param  {WebhookProps}  props      - a properties object
     * @param  {Boolean} isTargetRequired - tells if the target property is required (i.e., on creation) [default = false]
     * @return {WebhookProps}             - the properties object passed in parameter
     */


    WebhooksApi.prototype.validateProps = function validateProps(props) {
        var isTargetRequired = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

        if (!props || (0, _keys2.default)(props).length === 0) {
            return _promise2.default.reject(new Error('Must provide props.'));
        }

        if (isTargetRequired && !props.target) {
            return _promise2.default.reject(new Error('Must provide a target.'));
        }

        return _promise2.default.resolve(props);
    };

    /**
     * List all webhooks
     * @param  {AuthCredentials} auth
     * @return {APIResponse}
     */


    WebhooksApi.prototype.list = function list() {
        var url = this.getFullURL('webhooks');
        return this.request('GET', url);
    };

    /**
     * Creates a webhook
     * @param  {WebhookProps} props - a properties object
     * @return {APIResponse}
     */


    WebhooksApi.prototype.create = function create(props) {
        var _this2 = this;

        var url = this.getFullURL('webhooks');
        return this.validateProps(props, true).then(function (validatedProps) {
            return _this2.request('POST', url, validatedProps);
        });
    };

    /**
     * Retrieves a webhook
     * @param  {string} webhookId - an id
     * @return {APIResponse}
     */


    WebhooksApi.prototype.get = function get(webhookId) {
        var url = this.getFullURL('webhooks', webhookId);
        return this.request('GET', url);
    };

    /**
     * Updates a webhook
     * @param  {string} webhookId    - an id
     * @param  {WebhookProps} props  - a properties object
     * @return {APIResponse}
     */


    WebhooksApi.prototype.update = function update(webhookId, props) {
        var _this3 = this;

        var url = this.getFullURL('webhooks', webhookId);
        return this.validateProps(props).then(function (validatedProps) {
            return _this3.request('PUT', url, validatedProps);
        });
    };

    /**
     * Deletes a webhook
     * @param  {string} webhookId - an id
     * @return {APIResponse}
     import { getAuthenticationHeaders } from '../../../src/utils/auth';
     */


    WebhooksApi.prototype.delete = function _delete(webhookId) {
        var url = this.getFullURL('webhooks', webhookId);
        return this.request('DELETE', url);
    };

    return WebhooksApi;
}(_base.BaseApi);