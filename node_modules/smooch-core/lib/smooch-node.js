'use strict';

exports.__esModule = true;
exports.Smooch = undefined;

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _smooch = require('./smooch');

var _webhooks = require('./api/webhooks');

var _jwt = require('./utils/jwt');

var jwt = _interopRequireWildcard(_jwt);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Smooch = exports.Smooch = function (_SmoochBase) {
    (0, _inherits3.default)(Smooch, _SmoochBase);

    function Smooch() {
        var auth = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        (0, _classCallCheck3.default)(this, Smooch);

        if (auth.keyId && auth.secret && auth.scope) {
            var jwtBody = {
                scope: auth.scope
            };

            if (auth.userId) {
                jwtBody.userId = auth.userId;
            }

            auth = {
                jwt: jwt.generate(jwtBody, auth.secret, auth.keyId)
            };
        }

        var _this = (0, _possibleConstructorReturn3.default)(this, _SmoochBase.call(this, auth, options));

        _this.webhooks = new _webhooks.WebhooksApi(_this.serviceUrl, _this.authHeaders, _this.headers);

        (0, _assign2.default)(_this.utils, {
            jwt: jwt
        });
        return _this;
    }

    return Smooch;
}(_smooch.Smooch);